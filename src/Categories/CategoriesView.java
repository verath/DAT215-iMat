/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CategoriesView.java
 *
 * Created on Feb 25, 2013, 9:44:55 AM
 */
package Categories;

import Main.MainController;
import Main.SearchListener;
import ProductSearch.ProductSearch;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import se.chalmers.ait.dat215.project.ProductCategory;

/**
 *
 * @author Peter
 */
public class CategoriesView extends javax.swing.JPanel  implements SearchListener {

    public static Map<String, ProductSearch> productCategoryNames = new HashMap<String, ProductSearch>();

    static {
        Map<String, ProductSearch> temp = new HashMap<String, ProductSearch>();
        Set<ProductCategory> filter;

        // Frukt & Grönt
        filter = new HashSet<ProductCategory>();
        filter.add(ProductCategory.CITRUS_FRUIT);
        filter.add(ProductCategory.EXOTIC_FRUIT);
        filter.add(ProductCategory.FRUIT);
        filter.add(ProductCategory.MELONS);
        filter.add(ProductCategory.ROOT_VEGETABLE);
        temp.put("Frukt & Grönt", new ProductSearch(null, null, filter, false, "Frukt & Grönt"));

        // Kött
        filter = new HashSet<ProductCategory>();
        filter.add(ProductCategory.MEAT);
        temp.put("Kött", new ProductSearch(null, null, filter, false, "Kött"));

        productCategoryNames = Collections.unmodifiableMap(temp);
    }
    
    private List<CategoryItemView> categoryViews = new ArrayList<CategoryItemView>(10);

    /** Creates new form CategoriesView */
    public CategoriesView(){
        initComponents();
        
        MainController.INSTANCE.addSearchListener(this);

        // Display categories
        for (String name : productCategoryNames.keySet()) {
            ProductSearch ps = productCategoryNames.get(name);
            CategoryItemView civ = new CategoryItemView();
            civ.setCategoryName(name);
            civ.setProductSearch(ps);
            add(civ);
            categoryViews.add(civ);
        }

        // Show a special label for favorites
        CategoryItemView civ = new CategoryItemView();
        civ.setCategoryName("Favoriter");
        civ.setIsFavoriteLabel(true);
        add(civ);
        categoryViews.add(civ);
        
        validate();
        repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setName("Form"); // NOI18N
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void onSearch(ProductSearch ps) {
        for(CategoryItemView civ : categoryViews){
            civ.onSearchChange(ps);
        }
    }
}
